{"version":3,"sources":["components/Alert/SlotsAvailableAlert.jsx","components/Button/Button.jsx","components/Booking/AutomaticSlotBooking.jsx","components/Home/Home.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["renderList","center","className","moment","format","date","vaccine","available_capacity","name","pincode","session_id","SlotsAvailableAlert","loading","slotsList18","slotsList45","availableSlots18","availableSlots45","length","map","Button","varient","children","label","rest","class","AutomaticSlotBooking","token","setToken","useState","benificiaryList","setBenificiaryList","selectedBeneficiaryList","setSelectedBeneficiaryList","shouldSchedule","setShouldSchedule","setIsScheduling","setAppointmentId","useEffect","sessionExpiryalert","setInterval","getBeneficiary","setTimeout","voice","TextToSpeechStream","getVoiceByName","pitch","rate","write","sessionExpiryVoice","clearTimeout","isSending","forEach","item","schedule","fetch","headers","authorization","then","res","json","beneficiaries","catch","error","console","log","centerData","method","Authorization","mode","body","JSON","stringify","dose","center_id","slot","slots","finally","style","padding","beneficiary","age","parseInt","birth_year","type","onChange","e","data","list","target","checked","push","beneficiary_reference_id","Array","Set","filter","handleBeneficiarySelect","indexOf","appointments","onClick","Home","state","district","location","getState","getDistrict","Login","mobile","setMobile","otp","setOtp","sessionDetails","setSessionDetails","txnId","value","secret","credentials","otpHasKey","CryptoJS","SHA256","toString","enc","Hex","verifyOtp","App","setLoading","setSlotsList18","setAvailableSlots18","setSlotsList45","setavailableSlots45","volumeMute18","setVolumeMute18","volumeMute45","setVolumeMute45","getData","today","baseUrl","list18","availableList18","list45","availableList45","centers","sessions","centerRest","session","min_age_limit","vaccineAvailableVoice","sessionStorage","getItem","fetchInterval","setTokenHandler","setItem","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e0bcc8d.chunk.js","sourcesContent":["/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 18:32:55\n * @modify date 2021-05-04 18:32:55\n * @desc [description]\n */\nimport React from 'react';\nimport moment from 'moment';\n\nconst renderList = (center) => {\n    return (\n        <div className=\"row border-line\">\n            <div className=\"updated-time\">{moment().format('HH:MM:SS')}</div>\n\n            <div className=\"column\">\n                <div className=\"row\">\n                    <div>{center.date}</div>\n                    <div>{center.vaccine}</div>\n                    <div\n                        className={\n                            center.available_capacity > 0 ? 'green' : 'red'\n                        }\n                    >\n                        {center.available_capacity}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div>{center.name}</div>\n                    <div>{center.pincode}</div>\n                    <div>{center.session_id}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nfunction SlotsAvailableAlert({\n    loading,\n    slotsList18,\n    slotsList45,\n    availableSlots18,\n    availableSlots45,\n}) {\n    return (\n        <div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available (18+)</h2>\n                    {availableSlots18.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots18.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">Centers (18+)</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : (\n                        <div>{slotsList18.map(renderList)}</div>\n                    )}\n                </div>\n            </div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available (45+)</h2>\n                    {availableSlots45.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots45.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">Centers (45+)</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : (\n                        <div>{slotsList45.map(renderList)}</div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SlotsAvailableAlert;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 14:44:02\n * @modify date 2021-05-04 14:44:02\n * @desc [description]\n */\nimport React from 'react';\n\nimport './Button.css';\n\nfunction Button({\n    className = '',\n    varient = 'regular',\n    children,\n    label,\n    ...rest\n}) {\n    return (\n        <button class={`button -${varient} center ${className}`} {...rest}>\n            {children || label}\n        </button>\n    );\n}\n\nexport default Button;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 18:32:01\n * @modify date 2021-05-04 18:32:01\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport TextToSpeechStream from 'text-to-speech-stream';\nimport Button from '../Button/Button';\n\nconst renderList = (center) => {\n    return (\n        <div className=\"row border-line\">\n            <div className=\"updated-time\">{moment().format('HH:MM:SS')}</div>\n\n            <div className=\"column\">\n                <div className=\"row\">\n                    <div>{center.date}</div>\n                    <div>{center.vaccine}</div>\n                    <div\n                        className={\n                            center.available_capacity > 0 ? 'green' : 'red'\n                        }\n                    >\n                        {center.available_capacity}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div>{center.name}</div>\n                    <div>{center.pincode}</div>\n                    <div>{center.session_id}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\nconst sessionExpiryVoice = () => {\n    var voice = TextToSpeechStream.getVoiceByName('Alex');\n\n    var synthesizer = new TextToSpeechStream({\n        voice: voice,\n        pitch: 1,\n        rate: 1,\n    });\n\n    synthesizer.write('Session expired');\n};\nfunction AutomaticSlotBooking({\n    availableSlots18,\n    availableSlots45,\n    token,\n    setToken,\n}) {\n    const [benificiaryList, setBenificiaryList] = useState([]);\n    const [selectedBeneficiaryList, setSelectedBeneficiaryList] = useState([]);\n    const [shouldSchedule, setShouldSchedule] = useState(false);\n    const [isScheduling, setIsScheduling] = useState(false);\n    const [appointmentId, setAppointmentId] = useState(null);\n\n    useEffect(() => {\n        let sessionExpiryalert = setInterval(() => {\n            getBeneficiary();\n        }, 110000);\n\n        setTimeout(() => {\n            sessionExpiryVoice();\n        }, 840000);\n\n        return () => {\n            clearTimeout(sessionExpiryalert);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (\n            availableSlots18.length > 0 &&\n            selectedBeneficiaryList.length &&\n            shouldSchedule\n        ) {\n            let isSending = false;\n            availableSlots18.forEach((item) => {\n                if (\n                    item.available_capacity >= selectedBeneficiaryList.length &&\n                    !isSending\n                ) {\n                    isSending = true;\n                    schedule(item);\n                }\n            });\n        }\n    }, [availableSlots18]);\n\n    useEffect(() => {\n        getBeneficiary();\n    }, [token]);\n\n    const getBeneficiary = () => {\n        if (!token) {\n            return;\n        }\n\n        fetch('https://cdn-api.co-vin.in/api/v2/appointment/beneficiaries', {\n            headers: {\n                authorization: 'Bearer ' + token,\n            },\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setBenificiaryList(res.beneficiaries);\n            })\n            .catch((error) => {\n                console.log(error);\n                setToken(null);\n            });\n    };\n\n    const schedule = (centerData) => {\n        if (!token) {\n            return;\n        }\n        setIsScheduling(true);\n        fetch('https://cdn-api.co-vin.in/api/v2/appointment/schedule', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                Authorization: 'Bearer ' + token,\n            },\n            'content-type': 'application/json',\n            mode: 'cors',\n            body: JSON.stringify({\n                dose: 1,\n                session_id: centerData.session_id,\n                center_id: centerData.center_id,\n                slot: centerData.slots[0],\n                beneficiaries: benificiaryList,\n            }),\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setAppointmentId(res);\n            })\n            .catch((error) => console.log(error))\n            .finally(() => {\n                setIsScheduling(false);\n                getBeneficiary();\n            });\n    };\n\n    const handleBeneficiarySelect = (e, data) => {\n        let list = [...selectedBeneficiaryList];\n        if (e.target.checked) {\n            list.push(data.beneficiary_reference_id);\n            list = [...new Array(...new Set(list))];\n        } else {\n            list = list.filter(\n                (item) => data.beneficiary_reference_id !== item\n            );\n        }\n\n        setSelectedBeneficiaryList(list);\n    };\n\n    return (\n        <div className=\"App-header\">\n            <div className=\"available-container\">\n                <h2 className=\"title\">Slots Available (18+)</h2>\n                {availableSlots18.length === 0 ? (\n                    <div className=\"loader\">No slots available</div>\n                ) : (\n                    <div>{availableSlots18.map(renderList)}</div>\n                )}\n            </div>\n            <div className=\"all-centers-container\">\n                <h2 className=\"title\">Beneficiary Details</h2>\n                {token ? (\n                    <div style={{ padding: 10 }}>\n                        <div>{selectedBeneficiaryList.length} Selected </div>\n                        {benificiaryList.map((beneficiary) => {\n                            let age =\n                                parseInt(moment().format('YYYY')) -\n                                parseInt(beneficiary.birth_year);\n\n                            if (age >= 45) return null;\n                            return (\n                                <div className=\"row border-line be-info\">\n                                    <div>\n                                        <input\n                                            type=\"checkbox\"\n                                            onChange={(e) =>\n                                                handleBeneficiarySelect(\n                                                    e,\n                                                    beneficiary\n                                                )\n                                            }\n                                            checked={\n                                                selectedBeneficiaryList.indexOf(\n                                                    beneficiary.beneficiary_reference_id\n                                                ) !== -1\n                                            }\n                                        />\n                                    </div>\n                                    <div>{beneficiary.name}</div>\n                                    <div>{age}</div>\n                                    <div>\n                                        {beneficiary.appointments.length}{' '}\n                                        appointments\n                                    </div>\n                                </div>\n                            );\n                        })}\n                        <div>\n                            {selectedBeneficiaryList.length ? (\n                                <Button\n                                    label=\"Schedule\"\n                                    onClick={() => {\n                                        setShouldSchedule(true);\n                                    }}\n                                />\n                            ) : null}\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"loader error\">Please Login</div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default AutomaticSlotBooking;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-05 19:05:18\n * @modify date 2021-05-05 19:05:18\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\n\nfunction Home({ token }) {\n    const [location, setLocation] = useState({\n        state: 16,\n        district: 29,\n    });\n\n    useEffect(() => {\n        getState();\n        getDistrict();\n    }, []);\n\n    const getState = () => {\n        fetch('https://cdn-api.co-vin.in/api/v2/admin/location/states')\n            .then((res) => res.json())\n            .then((res) => {\n                console.log(res);\n            })\n            .catch((error) => console.log(error));\n    };\n    const getDistrict = () => {\n        if (!location.state) return;\n        fetch(\n            'https://cdn-api.co-vin.in/api/v2/admin/location/districts/' +\n                location.state,\n            {\n                headers: {\n                    'content-type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                },\n                mode: 'cors',\n            }\n        )\n            .then((res) => res.json())\n            .then((res) => {\n                console.log(res);\n            })\n            .catch((error) => console.log(error));\n    };\n    return <div></div>;\n}\n\nexport default Home;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-05 19:24:02\n * @modify date 2021-05-05 19:24:02\n * @desc [description]\n */\nimport React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport CryptoJS from 'crypto-js';\n\nfunction Login({ setToken }) {\n    const [mobile, setMobile] = useState(null);\n    const [otp, setOtp] = useState(null);\n    const [sessionDetails, setSessionDetails] = useState({});\n\n    const getOtp = () => {\n        fetch('https://cdn-api.co-vin.in/api/v2/auth/generateMobileOTP', {\n            body: JSON.stringify({\n                mobile: mobile,\n                secret:\n                    'U2FsdGVkX1/3I5UgN1RozGJtexc1kfsaCKPadSux9LY+cVUADlIDuKn0wCN+Y8iB4ceu6gFxNQ5cCfjm1BsmRQ==',\n            }),\n            headers: {\n                'content-type': 'application/json',\n            },\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'omit',\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                console.log(res);\n                setSessionDetails({ txnId: res.txnId });\n            })\n            .catch((error) => console.log(error));\n    };\n    const verifyOtp = () => {\n        let otpHasKey = CryptoJS.SHA256(otp).toString(CryptoJS.enc.Hex);\n        fetch('https://cdn-api.co-vin.in/api/v2/auth/validateMobileOtp', {\n            body: JSON.stringify({\n                otp: otpHasKey,\n                txnId: sessionDetails.txnId,\n            }),\n            headers: {\n                'content-type': 'application/json',\n            },\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'omit',\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                console.log(res);\n                setSessionDetails({\n                    ...sessionDetails,\n                    token: res.token,\n                });\n                if (setToken) setToken(res.token);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    return (\n        <div>\n            {!sessionDetails.txnId && (\n                <div className=\"row login\">\n                    <div>Mobile No. </div>\n                    <div>\n                        <input\n                            type=\"tel\"\n                            value={mobile}\n                            name=\"mobile\"\n                            onChange={(e) => setMobile(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <Button label=\"Submit\" onClick={() => getOtp()} />\n                    </div>\n                </div>\n            )}\n            {sessionDetails.txnId && (\n                <div className=\"row otp\">\n                    <div>Enter OTP </div>\n                    <div>\n                        <input\n                            type=\"number\"\n                            value={otp}\n                            name=\"mobile\"\n                            onChange={(e) => setOtp(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <Button label=\"Submit\" onClick={() => verifyOtp()} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Login;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-03 23:45:24\n * @modify date 2021-05-05 21:57:58\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport TextToSpeechStream from 'text-to-speech-stream';\nimport moment from 'moment';\n\nimport SlotsAvailableAlert from './components/Alert/SlotsAvailableAlert';\nimport AutomaticSlotBooking from './components/Booking/AutomaticSlotBooking';\nimport Button from './components/Button/Button';\n\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\n\nfunction App() {\n    const [token, setToken] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [slotsList18, setSlotsList18] = useState([]);\n    const [availableSlots18, setAvailableSlots18] = useState([]);\n    const [slotsList45, setSlotsList45] = useState([]);\n    const [availableSlots45, setavailableSlots45] = useState([]);\n    const [volumeMute18, setVolumeMute18] = useState(true);\n    const [volumeMute45, setVolumeMute45] = useState(false);\n\n    const getData = () => {\n        setLoading(true);\n        var today = moment().format('DD-MM-YYYY');\n        let baseUrl =\n            'https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict';\n\n        fetch(baseUrl + '?district_id=294&date=' + today)\n            .then((res) => res.json())\n            .then((res) => {\n                let list18 = [];\n                let availableList18 = [];\n                let list45 = [];\n                let availableList45 = [];\n                res.centers.forEach(({ sessions, ...centerRest }) => {\n                    sessions.forEach((session) => {\n                        let { min_age_limit, available_capacity } = session;\n                        let data = {\n                            ...centerRest,\n                            ...session,\n                        };\n                        if (min_age_limit < 45) {\n                            list18.push(data);\n\n                            if (available_capacity > 0) {\n                                availableList18.push(data);\n                            }\n                        } else {\n                            list45.push(data);\n\n                            if (available_capacity > 0) {\n                                availableList45.push(data);\n                            }\n                        }\n                    });\n                });\n\n                setSlotsList18(list18);\n                setAvailableSlots18(availableList18);\n                setSlotsList45(list45);\n                setavailableSlots45(availableList45);\n            })\n            .catch((error) => console.log(error))\n            .finally(() => setLoading(false));\n    };\n\n    useEffect(() => {\n        if (availableSlots18.length > 0 && volumeMute18) {\n            vaccineAvailableVoice('18+');\n        }\n    }, [availableSlots18]);\n\n    useEffect(() => {\n        if (availableSlots45.length > 0 && volumeMute45) {\n            // console.log('Available for 45+ voice....');\n            vaccineAvailableVoice('45+');\n        }\n    }, [availableSlots45]);\n\n    useEffect(() => {\n        try {\n            let token = sessionStorage.getItem('token');\n            setToken(token);\n        } catch (error) {\n            console.log(error);\n        }\n        getData();\n        let fetchInterval = setInterval(() => getData(), 2000);\n        return () => {\n            clearTimeout(fetchInterval);\n        };\n    }, []);\n\n    const vaccineAvailableVoice = (age) => {\n        var voice = TextToSpeechStream.getVoiceByName('Alex');\n\n        var synthesizer = new TextToSpeechStream({\n            voice: voice,\n            pitch: 1,\n            rate: 1,\n        });\n\n        synthesizer.write('Covid vaccines are available for ' + age);\n    };\n\n    const setTokenHandler = (token) => {\n        setToken(token);\n        sessionStorage.setItem('token', token);\n    };\n\n    return (\n        <Router>\n            <div>\n                <header>\n                    <nav>\n                        <ul className=\"nav-area\">\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/slots_available\">\n                                    Slots available\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to=\"/automatic_booking\">Booking</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                    <div>{!token && <Login setToken={setTokenHandler} />}</div>\n                    <div className=\"volume-controll\">\n                        <Button\n                            onClick={() => setVolumeMute18(!volumeMute18)}\n                            className=\"icon-button\"\n                        >\n                            <span>18+</span>\n                            <i\n                                className={`fa fa-volume-${\n                                    volumeMute18 ? 'up' : 'off'\n                                }`}\n                            ></i>\n                        </Button>\n                        <Button\n                            onClick={() => setVolumeMute45(!volumeMute45)}\n                            className=\"icon-button\"\n                        >\n                            <span>45+</span>\n                            <i\n                                className={`fa fa-volume-${\n                                    volumeMute45 ? 'up' : 'off'\n                                }`}\n                            ></i>\n                        </Button>\n                    </div>\n                </header>\n                <Home token={token} />\n                <Switch>\n                    <Route path=\"/slots_available\">\n                        <SlotsAvailableAlert\n                            loading={loading}\n                            slotsList18={slotsList18}\n                            slotsList45={slotsList45}\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                        />\n                    </Route>\n                    <Route path=\"/automatic_booking\">\n                        <AutomaticSlotBooking\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                            token={token}\n                            setToken={setTokenHandler}\n                        />\n                    </Route>\n                    <Route path=\"/\">\n                        <SlotsAvailableAlert\n                            loading={loading}\n                            slotsList18={slotsList18}\n                            slotsList45={slotsList45}\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}