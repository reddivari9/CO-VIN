{"version":3,"sources":["components/Alert/SlotsAvailableAlert.jsx","components/Button/Button.jsx","components/Booking/AutomaticSlotBooking.jsx","components/Home/Home.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["renderList","center","className","moment","format","date","vaccine","available_capacity_dose1","available_capacity_dose2","name","pincode","district_name","SlotsAvailableAlert","loading","slotsList18","slotsList45","availableSlots18","availableSlots45","age","dose","style","display","flexDirection","length","map","Button","varient","children","label","rest","class","sessionExpiryVoice","text","voice","TextToSpeechStream","getVoiceByName","synthesizer","pitch","rate","cancel","write","AutomaticSlotBooking","token","setToken","useState","benificiaryList","setBenificiaryList","selectedBeneficiaryList","setSelectedBeneficiaryList","shouldSchedule","setShouldSchedule","setIsScheduling","setAppointmentId","scheduleStatusMessage","setScheduleStatusMessage","captcha","setCaptcha","slotDetails","setSlotDetails","isGettingCaptcha","setisGettingCaptcha","slotsList","setSlotsList","useEffect","getBeneficiary","sessionExpiryalert","setInterval","clearTimeout","isSending","forEach","item","available_capacity","getReCaptcha","fetch","headers","authorization","mode","method","then","res","json","replace","document","querySelector","innerHTML","catch","error","console","log","beneficiaries","schedule","centerData","today","isToday","isSame","index","hour","parseInt","slotIndex","Authorization","body","JSON","stringify","session_id","center_id","slot","slots","type","msg","finally","handleSubmit","status","padding","beneficiary","_age","birth_year","disabled","onChange","e","data","list","target","checked","push","beneficiary_reference_id","Array","Set","filter","handleBeneficiarySelect","indexOf","appointments","onClick","value","Home","setDistrictId","state","setState","district","setDistrict","states","setStates","districts","setDistricts","getState","getDistrict","district_id","state_id","state_name","Login","mobile","setMobile","otp","setOtp","sessionDetails","setSessionDetails","txnId","secret","credentials","otpHasKey","CryptoJS","SHA256","toString","enc","Hex","verifyOtp","App","setLoading","setSlotsList18","setAvailableSlots18","setSlotsList45","setavailableSlots45","volumeMute18","setVolumeMute18","volumeMute45","setVolumeMute45","districtId","vaccineType","setVaccineType","setAge","setDose","getData","baseUrl","list18","availableList18","list45","availableList45","centers","sessions","centerRest","session","min_age_limit","vaccineAvailableVoice","sessionStorage","getItem","fetchInterval","setTokenHandler","setItem","to","width","href","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6bfc4f9e.chunk.js","sourcesContent":["/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 18:32:55\n * @modify date 2021-05-04 18:32:55\n * @desc [description]\n */\nimport React from 'react';\nimport moment from 'moment';\n\nconst renderList = (center) => {\n    return (\n        <div className=\"row border-line\">\n            <div className=\"updated-time\">{moment().format('HH:MM:SS')}</div>\n\n            <div className=\"column\">\n                <div className=\"row\">\n                    <div>{center.date}</div>\n                    <div>{center.vaccine}</div>\n                    <div>\n                        Dose 1:{' '}\n                        <span\n                            className={\n                                center.available_capacity_dose1 > 0\n                                    ? 'green'\n                                    : 'red'\n                            }\n                        >\n                            {center.available_capacity_dose1}\n                        </span>\n                    </div>\n                    <div>\n                        Dose 2:{' '}\n                        <span\n                            className={\n                                center.available_capacity_dose2 > 0\n                                    ? 'green'\n                                    : 'red'\n                            }\n                        >\n                            {center.available_capacity_dose2}\n                        </span>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div>{center.name}</div>\n                    <div>{center.pincode}</div>\n                    <div>{center.district_name}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nfunction SlotsAvailableAlert({\n    loading,\n    slotsList18,\n    slotsList45,\n    availableSlots18,\n    availableSlots45,\n    age,\n    dose,\n}) {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: age === 45 ? 'column-reverse' : 'column',\n            }}\n        >\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available (18+) Dose {dose}</h2>\n                    {availableSlots18.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots18.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">Centers (18+)</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : slotsList18.length === 0 ? (\n                        <div className=\"loader\">No Centers available</div>\n                    ) : (\n                        <div>{slotsList18.map(renderList)}</div>\n                    )}\n                </div>\n            </div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available (45+)</h2>\n                    {availableSlots45.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots45.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">Centers (45+)</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : slotsList45.length === 0 ? (\n                        <div className=\"loader\">No Centers available</div>\n                    ) : (\n                        <div>{slotsList45.map(renderList)}</div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SlotsAvailableAlert;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 14:44:02\n * @modify date 2021-05-04 14:44:02\n * @desc [description]\n */\nimport React from 'react';\n\nimport './Button.css';\n\nfunction Button({\n    className = '',\n    varient = 'regular',\n    children,\n    label,\n    ...rest\n}) {\n    return (\n        <button class={`button -${varient} center ${className}`} {...rest}>\n            {children || label}\n        </button>\n    );\n}\n\nexport default Button;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 18:32:01\n * @modify date 2021-05-04 18:32:01\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport TextToSpeechStream from 'text-to-speech-stream';\nimport Button from '../Button/Button';\n\nconst renderList = (center) => {\n    return (\n        <div className=\"row border-line\">\n            <div className=\"updated-time\">{moment().format('HH:MM:SS')}</div>\n\n            <div className=\"column\">\n                <div className=\"row\">\n                    <div>{center.date}</div>\n                    <div>{center.vaccine}</div>\n                    <div>\n                        Dose 1:{' '}\n                        <span\n                            className={\n                                center.available_capacity_dose1 > 0\n                                    ? 'green'\n                                    : 'red'\n                            }\n                        >\n                            {center.available_capacity_dose1}\n                        </span>\n                    </div>\n                    <div>\n                        Dose 2:{' '}\n                        <span\n                            className={\n                                center.available_capacity_dose2 > 0\n                                    ? 'green'\n                                    : 'red'\n                            }\n                        >\n                            {center.available_capacity_dose2}\n                        </span>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div>{center.name}</div>\n                    <div>{center.pincode}</div>\n                    <div>{center.district_name}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\nconst sessionExpiryVoice = (text) => {\n    var voice = TextToSpeechStream.getVoiceByName('Alex');\n\n    var synthesizer = new TextToSpeechStream({\n        voice: voice,\n        pitch: 1,\n        rate: 1,\n    });\n    synthesizer.cancel();\n\n    synthesizer.write(text);\n};\n\nlet slotIndex = () => {\n    let hour = parseInt(moment().format('HH'));\n    let index = 0;\n    if (hour <= 7) {\n        index = 0;\n    } else if (hour <= 9) {\n        index = 1;\n    } else if (hour <= 11) {\n        index = 2;\n    } else if (hour <= 12) {\n        index = 3;\n    }\n\n    return index;\n};\nfunction AutomaticSlotBooking({\n    availableSlots18,\n    availableSlots45,\n    token,\n    setToken,\n    age,\n    dose,\n}) {\n    const [benificiaryList, setBenificiaryList] = useState([]);\n    const [selectedBeneficiaryList, setSelectedBeneficiaryList] = useState([]);\n    const [shouldSchedule, setShouldSchedule] = useState(false);\n    const [isScheduling, setIsScheduling] = useState(false);\n    const [appointmentId, setAppointmentId] = useState(null);\n    const [scheduleStatusMessage, setScheduleStatusMessage] = useState(null);\n    const [captcha, setCaptcha] = useState('');\n    const [slotDetails, setSlotDetails] = useState({});\n    const [isGettingCaptcha, setisGettingCaptcha] = useState(false);\n    const [slotsList, setSlotsList] = useState([]);\n\n    useEffect(() => {\n        getBeneficiary();\n        let sessionExpiryalert = setInterval(() => {\n            getBeneficiary();\n        }, 600000);\n\n        return () => {\n            clearTimeout(sessionExpiryalert);\n        };\n    }, []);\n\n    useEffect(() => {\n        setSelectedBeneficiaryList([]);\n        setShouldSchedule(false);\n    }, [age]);\n\n    useEffect(() => {\n        if (age === 18) {\n            setSlotsList(availableSlots18);\n        }\n        if (age === 45) {\n            setSlotsList(availableSlots45);\n        }\n    }, [availableSlots18, availableSlots45]);\n\n    useEffect(() => {\n        if (\n            slotsList.length > 0 &&\n            selectedBeneficiaryList.length &&\n            shouldSchedule\n        ) {\n            let isSending = false;\n            slotsList.forEach((item) => {\n                if (\n                    item.available_capacity >= selectedBeneficiaryList.length &&\n                    !isSending &&\n                    !isGettingCaptcha\n                ) {\n                    isSending = true;\n                    // schedule(item);\n                    setSlotDetails(item);\n                    getReCaptcha(item);\n                    setisGettingCaptcha(true);\n                }\n            });\n        }\n    }, [slotsList]);\n\n    useEffect(() => {\n        getBeneficiary();\n    }, [token]);\n\n    const getReCaptcha = () => {\n        fetch('https://cdn-api.co-vin.in/api/v2/auth/getRecaptcha', {\n            headers: {\n                authorization: 'Bearer ' + token,\n            },\n            mode: 'cors',\n            method: 'POST',\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.captcha) {\n                    let captcha = res.captcha.replace(/\\\\/gi);\n                    document.querySelector('.captcha-svg').innerHTML = captcha;\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n                // setToken(null);\n                // sessionExpiryVoice('Session expired');\n            });\n    };\n\n    const getBeneficiary = () => {\n        if (!token) {\n            return;\n        }\n\n        fetch('https://cdn-api.co-vin.in/api/v2/appointment/beneficiaries', {\n            headers: {\n                authorization: 'Bearer ' + token,\n            },\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setScheduleStatusMessage(null);\n                setBenificiaryList(res.beneficiaries);\n            })\n            .catch((error) => {\n                console.log(error);\n                setToken(null);\n                sessionExpiryVoice('Session expired');\n            });\n    };\n\n    const schedule = (centerData) => {\n        if (!token && selectedBeneficiaryList.length === 0) {\n            return;\n        }\n\n        let today = moment().format('DD-MM-YYYY');\n        let isToday = moment(today).isSame(centerData.date, 'day');\n        let index = 0;\n        if (isToday) {\n            index = slotIndex();\n        }\n\n        setIsScheduling(true);\n        fetch('https://cdn-api.co-vin.in/api/v2/appointment/schedule', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                Authorization: 'Bearer ' + token,\n            },\n            mode: 'cors',\n            body: JSON.stringify({\n                dose: dose,\n                session_id: centerData.session_id,\n                center_id: centerData.center_id,\n                slot: centerData.slots[index],\n                beneficiaries: selectedBeneficiaryList,\n                captcha: captcha,\n            }),\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.error) {\n                    if (res.error === 'Please enter valid security code') {\n                        getReCaptcha();\n                        setCaptcha('');\n                    }\n                    sessionExpiryVoice(\n                        res.error ||\n                            'Oops! Something went wrong. Please try again.'\n                    );\n                    setScheduleStatusMessage({\n                        type: 'error',\n                        msg: res.error,\n                    });\n                } else {\n                    setAppointmentId(res);\n                    setSelectedBeneficiaryList([]);\n                    setScheduleStatusMessage({\n                        type: 'success',\n                        msg: 'Your booking is successfully completed',\n                    });\n                    sessionExpiryVoice(\n                        'Your booking is successfully completed for ' +\n                            centerData.date +\n                            ' on ' +\n                            centerData.slots[index]\n                    );\n                    document.querySelector('.captcha-svg').innerHTML = '';\n                    setCaptcha('');\n                }\n            })\n            .catch((error) => console.log(error))\n            .finally(() => {\n                setScheduleStatusMessage({\n                    type: 'error',\n                    msg: 'Oops!! Something went wrong please try again',\n                });\n                setCaptcha('');\n                setIsScheduling(false);\n                getBeneficiary();\n                setShouldSchedule(false);\n                setisGettingCaptcha(false);\n            });\n    };\n\n    const handleBeneficiarySelect = (e, data) => {\n        let list = [...selectedBeneficiaryList];\n        if (e.target.checked) {\n            list.push(data.beneficiary_reference_id);\n            list = [...new Array(...new Set(list))];\n        } else {\n            list = list.filter(\n                (item) => data.beneficiary_reference_id !== item\n            );\n        }\n\n        setSelectedBeneficiaryList(list);\n    };\n\n    const handleSubmit = (status) => {\n        if (selectedBeneficiaryList.length === 0) {\n            setShouldSchedule(false);\n            return;\n        }\n        setShouldSchedule(status);\n    };\n\n    return (\n        <>\n            {scheduleStatusMessage && (\n                <div className={`banner ${scheduleStatusMessage.type}`}>\n                    {scheduleStatusMessage.msg}\n                </div>\n            )}\n\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available ({age}+)</h2>\n                    {slotsList.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{slotsList.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">Beneficiary Details</h2>\n                    {token ? (\n                        <div style={{ padding: 10 }}>\n                            <div>\n                                {selectedBeneficiaryList.length} Selected{' '}\n                            </div>\n                            {benificiaryList.map((beneficiary) => {\n                                let _age =\n                                    parseInt(moment().format('YYYY')) -\n                                    parseInt(beneficiary.birth_year);\n                                if (age === 18 && _age >= 45) {\n                                    return null;\n                                }\n                                if (age === 45 && _age < 45) {\n                                    return null;\n                                }\n                                return (\n                                    <div className=\"row border-line be-info\">\n                                        <div>\n                                            <input\n                                                disabled={shouldSchedule}\n                                                type=\"checkbox\"\n                                                onChange={(e) =>\n                                                    handleBeneficiarySelect(\n                                                        e,\n                                                        beneficiary\n                                                    )\n                                                }\n                                                checked={\n                                                    selectedBeneficiaryList.indexOf(\n                                                        beneficiary.beneficiary_reference_id\n                                                    ) !== -1\n                                                }\n                                            />\n                                        </div>\n                                        <div>{beneficiary.name}</div>\n                                        <div>{_age}</div>\n                                        <div>\n                                            {beneficiary.appointments.length}{' '}\n                                            appointments\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                            <div className=\"row\">\n                                <Button\n                                    label=\"Start Auto Book\"\n                                    onClick={() => {\n                                        handleSubmit(true);\n                                    }}\n                                />\n                                <Button\n                                    label=\"cancel\"\n                                    onClick={() => {\n                                        handleSubmit(false);\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                {shouldSchedule\n                                    ? 'Please wait until you receive Captcha ones slots available.'\n                                    : \"Please select Beneficiary's and click on 'Start Auto Book' Button\"}\n                            </div>\n\n                            <div className=\"captcha\">\n                                <div className=\"black\">\n                                    Enter captcha ones you receive it\n                                    <br />\n                                    Note: Captcha will be available ones slots\n                                    are available and you start Auto Book\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"captcha-svg\"></div>\n                                    <input\n                                        onChange={(e) => {\n                                            setCaptcha(e.target.value);\n                                        }}\n                                        value={captcha}\n                                    />\n                                    <Button\n                                        label=\"Submit & book now\"\n                                        onClick={() => {\n                                            schedule(slotDetails);\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"loader error\">Please Login</div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default AutomaticSlotBooking;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-05 19:05:18\n * @modify date 2021-05-05 19:05:18\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\n\nfunction Home({ token, setDistrictId }) {\n    const [state, setState] = useState(16);\n    const [district, setDistrict] = useState(null);\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n\n    useEffect(() => {\n        getState();\n    }, []);\n\n    useEffect(() => {\n        getDistrict();\n    }, [state]);\n\n    useEffect(() => {\n        if (!district) {\n            setState(16);\n            setDistrict(194);\n        } else {\n            setDistrictId(district);\n        }\n    }, [district]);\n\n    const getState = () => {\n        fetch('https://cdn-api.co-vin.in/api/v2/admin/location/states')\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.states) {\n                    setStates(res.states);\n                    if (state === 16 && !district) {\n                        setDistrict(294);\n                    }\n                }\n            })\n            .catch((error) => console.log(error));\n    };\n    const getDistrict = () => {\n        if (!state) return;\n        fetch(\n            'https://cdn-api.co-vin.in/api/v2/admin/location/districts/' +\n                state,\n            {\n                headers: {\n                    'content-type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                },\n                mode: 'cors',\n            }\n        )\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.districts) {\n                    setDistricts(res.districts);\n                    if (state === 16 && !district) {\n                        setDistrict(294);\n                    } else {\n                        setDistrict(res.districts[0].district_id);\n                    }\n                }\n            })\n            .catch((error) => console.log(error));\n    };\n\n    return (\n        <>\n            <div>\n                <label className=\"input-label\">State</label>\n                <select\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                >\n                    {states.map((state) => {\n                        return (\n                            <option value={state.state_id}>\n                                {state.state_name}\n                            </option>\n                        );\n                    })}\n                </select>\n            </div>\n            <div>\n                <label className=\"input-label\">District</label>\n                <select\n                    value={district}\n                    onChange={(e) => {\n                        setDistrict(e.target.value);\n                    }}\n                >\n                    {districts.map((district) => {\n                        return (\n                            <option value={district.district_id}>\n                                {district.district_name}\n                            </option>\n                        );\n                    })}\n                </select>\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-05 19:24:02\n * @modify date 2021-05-05 19:24:02\n * @desc [description]\n */\nimport React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport CryptoJS from 'crypto-js';\n\nfunction Login({ setToken }) {\n    const [mobile, setMobile] = useState(null);\n    const [otp, setOtp] = useState(null);\n    const [sessionDetails, setSessionDetails] = useState({});\n\n    const getOtp = () => {\n        if (!mobile) return;\n\n        fetch('https://cdn-api.co-vin.in/api/v2/auth/generateMobileOTP', {\n            body: JSON.stringify({\n                mobile: mobile,\n                secret:\n                    'U2FsdGVkX1/3I5UgN1RozGJtexc1kfsaCKPadSux9LY+cVUADlIDuKn0wCN+Y8iB4ceu6gFxNQ5cCfjm1BsmRQ==',\n            }),\n            headers: {\n                'content-type': 'application/json',\n            },\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'omit',\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setSessionDetails({ txnId: res.txnId });\n            })\n            .catch((error) => console.log(error));\n    };\n    const verifyOtp = () => {\n        if (!otp) return;\n\n        let otpHasKey = CryptoJS.SHA256(otp).toString(CryptoJS.enc.Hex);\n        fetch('https://cdn-api.co-vin.in/api/v2/auth/validateMobileOtp', {\n            body: JSON.stringify({\n                otp: otpHasKey,\n                txnId: sessionDetails.txnId,\n            }),\n            headers: {\n                'content-type': 'application/json',\n            },\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'omit',\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setSessionDetails({\n                    ...sessionDetails,\n                    token: res.token,\n                });\n                if (setToken) setToken(res.token);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    return (\n        <div>\n            {!sessionDetails.txnId && (\n                <div className=\"row login\">\n                    <div className=\"input-label black\">Mobile No. </div>\n                    <div>\n                        <input\n                            type=\"tel\"\n                            value={mobile}\n                            name=\"mobile\"\n                            onChange={(e) => setMobile(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <Button label=\"Submit\" onClick={() => getOtp()} />\n                    </div>\n                </div>\n            )}\n            {sessionDetails.txnId && (\n                <div className=\"row otp\">\n                    <div className=\"input-label black\">Enter OTP </div>\n                    <div>\n                        <input\n                            type=\"number\"\n                            value={otp}\n                            name=\"mobile\"\n                            onChange={(e) => setOtp(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <Button label=\"Submit\" onClick={() => verifyOtp()} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Login;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-03 23:45:24\n * @modify date 2021-05-18 09:44:57\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport TextToSpeechStream from 'text-to-speech-stream';\nimport moment from 'moment';\n\nimport SlotsAvailableAlert from './components/Alert/SlotsAvailableAlert';\nimport AutomaticSlotBooking from './components/Booking/AutomaticSlotBooking';\nimport Button from './components/Button/Button';\n\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\n\nfunction App() {\n    const [token, setToken] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [slotsList18, setSlotsList18] = useState([]);\n    const [availableSlots18, setAvailableSlots18] = useState([]);\n    const [slotsList45, setSlotsList45] = useState([]);\n    const [availableSlots45, setavailableSlots45] = useState([]);\n    const [volumeMute18, setVolumeMute18] = useState(true);\n    const [volumeMute45, setVolumeMute45] = useState(false);\n    const [districtId, setDistrictId] = useState(294);\n    const [vaccineType, setVaccineType] = useState('ALL');\n    const [age, setAge] = useState(18);\n\n    const [dose, setDose] = useState(1);\n\n    useEffect(() => {\n        if (age === 18) {\n            setVolumeMute18(true);\n            setVolumeMute45(false);\n        }\n        if (age === 45) {\n            setVolumeMute18(false);\n            setVolumeMute45(true);\n        }\n    }, [age]);\n\n    const getData = () => {\n        setLoading(true);\n        var today = moment().format('DD-MM-YYYY');\n        let baseUrl =\n            'https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict';\n\n        baseUrl += '?district_id=' + districtId + '&date=' + today;\n\n        if (vaccineType !== 'ALL') {\n            baseUrl += '&vaccine=' + vaccineType;\n        }\n\n        fetch(baseUrl)\n            .then((res) => res.json())\n            .then((res) => {\n                let list18 = [];\n                let availableList18 = [];\n                let list45 = [];\n                let availableList45 = [];\n                res.centers.forEach(({ sessions, ...centerRest }) => {\n                    sessions.forEach((session) => {\n                        let {\n                            min_age_limit,\n                            available_capacity,\n                            available_capacity_dose2,\n                            available_capacity_dose1,\n                        } = session;\n                        let data = {\n                            ...centerRest,\n                            ...session,\n                        };\n\n                        if (min_age_limit < 45) {\n                            list18.push(data);\n\n                            if (dose === 1 && available_capacity_dose1) {\n                                availableList18.push(data);\n                            }\n\n                            if (dose === 2 && available_capacity_dose2) {\n                                availableList18.push(data);\n                            }\n                        } else {\n                            list45.push(data);\n                            if (dose === 1 && available_capacity_dose1) {\n                                availableList45.push(data);\n                            }\n\n                            if (dose === 2 && available_capacity_dose2) {\n                                availableList45.push(data);\n                            }\n                        }\n                    });\n                });\n\n                setSlotsList18(list18);\n                setAvailableSlots18(availableList18);\n                setSlotsList45(list45);\n                setavailableSlots45(availableList45);\n            })\n            .catch((error) => console.log(error))\n            .finally(() => setLoading(false));\n    };\n\n    useEffect(() => {\n        if (availableSlots18.length > 0 && volumeMute18) {\n            vaccineAvailableVoice('18+');\n        }\n    }, [availableSlots18]);\n\n    useEffect(() => {\n        if (availableSlots45.length > 0 && volumeMute45) {\n            vaccineAvailableVoice('45+');\n        }\n    }, [availableSlots45]);\n\n    useEffect(() => {\n        try {\n            let token = sessionStorage.getItem('token');\n            setToken(token);\n        } catch (error) {\n            console.log(error);\n        }\n        getData();\n        let fetchInterval = setInterval(() => getData(), 2000);\n        return () => {\n            clearTimeout(fetchInterval);\n        };\n    }, [districtId, vaccineType, dose]);\n\n    const vaccineAvailableVoice = (age) => {\n        var voice = TextToSpeechStream.getVoiceByName('Alex');\n\n        var synthesizer = new TextToSpeechStream({\n            voice: voice,\n            pitch: 1,\n            rate: 1,\n        });\n        synthesizer.cancel();\n\n        synthesizer.write('vaccines are available for ' + age);\n    };\n\n    const setTokenHandler = (token) => {\n        setToken(token);\n        sessionStorage.setItem('token', token);\n    };\n\n    return (\n        <Router>\n            <div>\n                <header>\n                    <nav>\n                        <ul className=\"nav-area\">\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/slots_available\">\n                                    Slots available\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to=\"/automatic_booking\">Booking</Link>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <div>{!token && <Login setToken={setTokenHandler} />}</div>\n\n                    <div className=\"volume-controll\">\n                        <Button\n                            onClick={() => setVolumeMute18(!volumeMute18)}\n                            className=\"icon-button\"\n                        >\n                            <span>18+</span>\n                            <i\n                                className={`fa fa-volume-${\n                                    volumeMute18 ? 'up' : 'off'\n                                }`}\n                            ></i>\n                        </Button>\n                        <Button\n                            onClick={() => setVolumeMute45(!volumeMute45)}\n                            className=\"icon-button\"\n                        >\n                            <span>45+</span>\n                            <i\n                                className={`fa fa-volume-${\n                                    volumeMute45 ? 'up' : 'off'\n                                }`}\n                            ></i>\n                        </Button>\n                    </div>\n                </header>\n                <div className=\"row header-baner\">\n                    <div className=\"row\">\n                        <Home token={token} setDistrictId={setDistrictId} />\n                        <div>\n                            <label className=\"input-label\">Vaccine Type</label>\n                            <select\n                                value={vaccineType}\n                                onChange={(e) => setVaccineType(e.target.value)}\n                            >\n                                <option value=\"ALL\">ALL</option>\n                                <option value=\"COVAXIN\">COVAXIN</option>\n                                <option value=\"COVISHIELD\">COVISHIELD</option>\n                            </select>\n                        </div>\n\n                        <div>\n                            <label className=\"input-label\">Age Limit</label>\n                            <select\n                                value={age}\n                                onChange={(e) =>\n                                    setAge(parseInt(e.target.value))\n                                }\n                            >\n                                <option value={18}>18+</option>\n                                <option value={45}>45+</option>\n                            </select>\n                        </div>\n\n                        <div>\n                            <label className=\"input-label\">Dose</label>\n                            <select\n                                value={dose}\n                                onChange={(e) =>\n                                    setDose(parseInt(e.target.value))\n                                }\n                            >\n                                <option value={1}>Dose 1</option>\n                                <option value={2}>Dose 2</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"row right-align my-info\">\n                        @ Praveen Reddy Reddivari | praveen.reddivari@gmail.com\n                        <div className=\"contact-icons\" style={{ width: 100 }}>\n                            <a\n                                href=\"https://www.linkedin.com/in/praveen-reddy-b8481b77/\"\n                                target=\"_blank\"\n                                class=\"fa fa-linkedin\"\n                            ></a>\n                            <a\n                                href=\"https://www.facebook.com/praveen.reddivari\"\n                                target=\"_blank\"\n                                class=\"fa fa-facebook\"\n                            ></a>\n                            <a\n                                href=\"https://twitter.com/reddivari_9\"\n                                target=\"_blank\"\n                                class=\"fa fa-twitter\"\n                            ></a>\n                        </div>\n                    </div>\n                </div>\n                <Switch>\n                    <Route path=\"/slots_available\">\n                        <SlotsAvailableAlert\n                            age={age}\n                            dose={dose}\n                            loading={loading}\n                            slotsList18={slotsList18}\n                            slotsList45={slotsList45}\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                        />\n                    </Route>\n                    <Route path=\"/automatic_booking\">\n                        <AutomaticSlotBooking\n                            age={age}\n                            dose={dose}\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                            token={token}\n                            setToken={setTokenHandler}\n                        />\n                    </Route>\n                    <Route path=\"/\">\n                        <SlotsAvailableAlert\n                            age={age}\n                            dose={dose}\n                            loading={loading}\n                            slotsList18={slotsList18}\n                            slotsList45={slotsList45}\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}