{"version":3,"sources":["components/Alert/SlotsAvailableAlert.jsx","components/Button/Button.jsx","components/Booking/AutomaticSlotBooking.jsx","components/Home/Home.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["renderList","center","className","moment","format","date","vaccine","available_capacity","name","pincode","district_name","SlotsAvailableAlert","loading","slotsList18","slotsList45","availableSlots18","availableSlots45","length","map","Button","varient","children","label","rest","class","sessionExpiryVoice","text","voice","TextToSpeechStream","getVoiceByName","pitch","rate","write","AutomaticSlotBooking","token","setToken","useState","benificiaryList","setBenificiaryList","selectedBeneficiaryList","setSelectedBeneficiaryList","shouldSchedule","setShouldSchedule","setIsScheduling","setAppointmentId","scheduleStatusMessage","setScheduleStatusMessage","useEffect","getBeneficiary","sessionExpiryalert","setInterval","clearTimeout","isSending","forEach","item","schedule","fetch","headers","authorization","then","res","json","beneficiaries","catch","error","console","log","centerData","today","isToday","isSame","index","hour","parseInt","slotIndex","method","Authorization","mode","body","JSON","stringify","dose","session_id","center_id","slot","slots","type","msg","finally","handleSubmit","status","style","padding","beneficiary","age","birth_year","disabled","onChange","e","data","list","target","checked","push","beneficiary_reference_id","Array","Set","filter","handleBeneficiarySelect","indexOf","appointments","onClick","Home","setDistrictId","state","setState","district","setDistrict","states","setStates","districts","setDistricts","getState","getDistrict","district_id","value","state_id","state_name","Login","mobile","setMobile","otp","setOtp","sessionDetails","setSessionDetails","txnId","secret","credentials","otpHasKey","CryptoJS","SHA256","toString","enc","Hex","verifyOtp","App","setLoading","setSlotsList18","setAvailableSlots18","setSlotsList45","setavailableSlots45","volumeMute18","setVolumeMute18","volumeMute45","setVolumeMute45","districtId","vaccineType","setVaccineType","getData","baseUrl","list18","availableList18","list45","availableList45","centers","sessions","centerRest","session","min_age_limit","vaccineAvailableVoice","sessionStorage","getItem","fetchInterval","setTokenHandler","setItem","to","href","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaae875f.chunk.js","sourcesContent":["/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 18:32:55\n * @modify date 2021-05-04 18:32:55\n * @desc [description]\n */\nimport React from 'react';\nimport moment from 'moment';\n\nconst renderList = (center) => {\n    return (\n        <div className=\"row border-line\">\n            <div className=\"updated-time\">{moment().format('HH:MM:SS')}</div>\n\n            <div className=\"column\">\n                <div className=\"row\">\n                    <div>{center.date}</div>\n                    <div>{center.vaccine}</div>\n                    <div\n                        className={\n                            center.available_capacity > 0 ? 'green' : 'red'\n                        }\n                    >\n                        {center.available_capacity}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div>{center.name}</div>\n                    <div>{center.pincode}</div>\n                    <div>{center.district_name}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nfunction SlotsAvailableAlert({\n    loading,\n    slotsList18,\n    slotsList45,\n    availableSlots18,\n    availableSlots45,\n}) {\n    return (\n        <div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available (18+)</h2>\n                    {availableSlots18.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots18.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">Centers (18+)</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : slotsList18.length === 0 ? (\n                        <div className=\"loader\">No Centers available</div>\n                    ) : (\n                        <div>{slotsList18.map(renderList)}</div>\n                    )}\n                </div>\n            </div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available (45+)</h2>\n                    {availableSlots45.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots45.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">Centers (45+)</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : slotsList45.length === 0 ? (\n                        <div className=\"loader\">No Centers available</div>\n                    ) : (\n                        <div>{slotsList45.map(renderList)}</div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SlotsAvailableAlert;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 14:44:02\n * @modify date 2021-05-04 14:44:02\n * @desc [description]\n */\nimport React from 'react';\n\nimport './Button.css';\n\nfunction Button({\n    className = '',\n    varient = 'regular',\n    children,\n    label,\n    ...rest\n}) {\n    return (\n        <button class={`button -${varient} center ${className}`} {...rest}>\n            {children || label}\n        </button>\n    );\n}\n\nexport default Button;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-04 18:32:01\n * @modify date 2021-05-04 18:32:01\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport TextToSpeechStream from 'text-to-speech-stream';\nimport Button from '../Button/Button';\n\nconst renderList = (center) => {\n    return (\n        <div className=\"row border-line\">\n            <div className=\"updated-time\">{moment().format('HH:MM:SS')}</div>\n\n            <div className=\"column\">\n                <div className=\"row\">\n                    <div>{center.date}</div>\n                    <div>{center.vaccine}</div>\n                    <div\n                        className={\n                            center.available_capacity > 0 ? 'green' : 'red'\n                        }\n                    >\n                        {center.available_capacity}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div>{center.name}</div>\n                    <div>{center.pincode}</div>\n                    <div>{center.district_name}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\nconst sessionExpiryVoice = (text) => {\n    var voice = TextToSpeechStream.getVoiceByName('Alex');\n\n    var synthesizer = new TextToSpeechStream({\n        voice: voice,\n        pitch: 1,\n        rate: 1,\n    });\n\n    synthesizer.write(text);\n};\n\nlet slotIndex = () => {\n    let hour = parseInt(moment().format('HH'));\n    let index = 0;\n    if (hour <= 7) {\n        index = 0;\n    } else if (hour <= 9) {\n        index = 1;\n    } else if (hour <= 11) {\n        index = 2;\n    } else if (hour <= 12) {\n        index = 3;\n    }\n\n    return index;\n};\nfunction AutomaticSlotBooking({\n    availableSlots18,\n    availableSlots45,\n    token,\n    setToken,\n}) {\n    const [benificiaryList, setBenificiaryList] = useState([]);\n    const [selectedBeneficiaryList, setSelectedBeneficiaryList] = useState([]);\n    const [shouldSchedule, setShouldSchedule] = useState(false);\n    const [isScheduling, setIsScheduling] = useState(false);\n    const [appointmentId, setAppointmentId] = useState(null);\n    const [scheduleStatusMessage, setScheduleStatusMessage] = useState(null);\n\n    useEffect(() => {\n        getBeneficiary();\n        let sessionExpiryalert = setInterval(() => {\n            getBeneficiary();\n        }, 600000);\n\n        return () => {\n            clearTimeout(sessionExpiryalert);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (\n            availableSlots18.length > 0 &&\n            selectedBeneficiaryList.length &&\n            shouldSchedule\n        ) {\n            let isSending = false;\n            availableSlots18.forEach((item) => {\n                if (\n                    item.available_capacity >= selectedBeneficiaryList.length &&\n                    !isSending\n                ) {\n                    isSending = true;\n                    schedule(item);\n                }\n            });\n        }\n    }, [availableSlots18]);\n\n    useEffect(() => {\n        getBeneficiary();\n    }, [token]);\n\n    const getBeneficiary = () => {\n        if (!token) {\n            return;\n        }\n\n        fetch('https://cdn-api.co-vin.in/api/v2/appointment/beneficiaries', {\n            headers: {\n                authorization: 'Bearer ' + token,\n            },\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setScheduleStatusMessage(null);\n                setBenificiaryList(res.beneficiaries);\n            })\n            .catch((error) => {\n                console.log(error);\n                setToken(null);\n                sessionExpiryVoice('Session expired');\n            });\n    };\n\n    const schedule = (centerData) => {\n        if (!token && selectedBeneficiaryList.length === 0) {\n            return;\n        }\n\n        let today = moment().format('DD-MM-YYYY');\n        let isToday = moment(today).isSame(centerData.date, 'day');\n        let index = 0;\n        if (isToday) {\n            index = slotIndex();\n        }\n\n        setIsScheduling(true);\n        fetch('https://cdn-api.co-vin.in/api/v2/appointment/schedule', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                Authorization: 'Bearer ' + token,\n            },\n            'content-type': 'application/json',\n            mode: 'cors',\n            body: JSON.stringify({\n                dose: 1,\n                session_id: centerData.session_id,\n                center_id: centerData.center_id,\n                slot: centerData.slots[index],\n                beneficiaries: selectedBeneficiaryList,\n            }),\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.error) {\n                    sessionExpiryVoice(\n                        res.error ||\n                            'Oops! Something went wrong. Please try again.'\n                    );\n                    setScheduleStatusMessage({\n                        type: 'error',\n                        msg: res.error,\n                    });\n                } else {\n                    setAppointmentId(res);\n                    setSelectedBeneficiaryList([]);\n                    setScheduleStatusMessage({\n                        type: 'success',\n                        msg: 'Your booking is successfully completed',\n                    });\n                    sessionExpiryVoice(\n                        'Your booking is successfully completed for ' +\n                            centerData.date +\n                            ' on ' +\n                            centerData.slots[index]\n                    );\n                }\n            })\n            .catch((error) => console.log(error))\n            .finally(() => {\n                setScheduleStatusMessage({\n                    type: 'error',\n                    msg: 'Oops!! Something went wrong please try again',\n                });\n                setIsScheduling(false);\n                getBeneficiary();\n                setShouldSchedule(false);\n            });\n    };\n\n    const handleBeneficiarySelect = (e, data) => {\n        let list = [...selectedBeneficiaryList];\n        if (e.target.checked) {\n            list.push(data.beneficiary_reference_id);\n            list = [...new Array(...new Set(list))];\n        } else {\n            list = list.filter(\n                (item) => data.beneficiary_reference_id !== item\n            );\n        }\n\n        setSelectedBeneficiaryList(list);\n    };\n\n    const handleSubmit = (status) => {\n        if (selectedBeneficiaryList.length === 0) {\n            setShouldSchedule(false);\n            return;\n        }\n        setShouldSchedule(status);\n    };\n\n    return (\n        <>\n            {scheduleStatusMessage && (\n                <div className={`banner ${scheduleStatusMessage.type}`}>\n                    {scheduleStatusMessage.msg}\n                </div>\n            )}\n\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available (18+)</h2>\n                    {availableSlots18.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots18.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">Beneficiary Details</h2>\n                    {token ? (\n                        <div style={{ padding: 10 }}>\n                            <div>\n                                {selectedBeneficiaryList.length} Selected{' '}\n                            </div>\n                            {benificiaryList.map((beneficiary) => {\n                                let age =\n                                    parseInt(moment().format('YYYY')) -\n                                    parseInt(beneficiary.birth_year);\n\n                                if (age >= 45) return null;\n                                return (\n                                    <div className=\"row border-line be-info\">\n                                        <div>\n                                            <input\n                                                disabled={shouldSchedule}\n                                                type=\"checkbox\"\n                                                onChange={(e) =>\n                                                    handleBeneficiarySelect(\n                                                        e,\n                                                        beneficiary\n                                                    )\n                                                }\n                                                checked={\n                                                    selectedBeneficiaryList.indexOf(\n                                                        beneficiary.beneficiary_reference_id\n                                                    ) !== -1\n                                                }\n                                            />\n                                        </div>\n                                        <div>{beneficiary.name}</div>\n                                        <div>{age}</div>\n                                        <div>\n                                            {beneficiary.appointments.length}{' '}\n                                            appointments\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                            <div className=\"row\">\n                                <Button\n                                    label=\"Auto Book\"\n                                    onClick={() => {\n                                        handleSubmit(true);\n                                    }}\n                                />\n                                <Button\n                                    label=\"cancel\"\n                                    onClick={() => {\n                                        handleSubmit(false);\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                {shouldSchedule\n                                    ? 'Please wait until automatic booking complete.'\n                                    : \"Please select Beneficiary's and click on schedule\"}\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"loader error\">Please Login</div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default AutomaticSlotBooking;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-05 19:05:18\n * @modify date 2021-05-05 19:05:18\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\n\nfunction Home({ token, setDistrictId }) {\n    const [state, setState] = useState(16);\n    const [district, setDistrict] = useState(null);\n    const [states, setStates] = useState([]);\n    const [districts, setDistricts] = useState([]);\n\n    useEffect(() => {\n        getState();\n    }, []);\n\n    useEffect(() => {\n        getDistrict();\n    }, [state]);\n\n    useEffect(() => {\n        if (!district) {\n            setState(16);\n            setDistrict(194);\n        } else {\n            setDistrictId(district);\n        }\n    }, [district]);\n\n    const getState = () => {\n        fetch('https://cdn-api.co-vin.in/api/v2/admin/location/states')\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.states) {\n                    setStates(res.states);\n                    if (state === 16 && !district) {\n                        setDistrict(294);\n                    }\n                }\n            })\n            .catch((error) => console.log(error));\n    };\n    const getDistrict = () => {\n        if (!state) return;\n        fetch(\n            'https://cdn-api.co-vin.in/api/v2/admin/location/districts/' +\n                state,\n            {\n                headers: {\n                    'content-type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                },\n                mode: 'cors',\n            }\n        )\n            .then((res) => res.json())\n            .then((res) => {\n                if (res.districts) {\n                    setDistricts(res.districts);\n                    if (state === 16 && !district) {\n                        setDistrict(294);\n                    } else {\n                        setDistrict(res.districts[0].district_id);\n                    }\n                }\n            })\n            .catch((error) => console.log(error));\n    };\n\n    return (\n        <>\n            <div>\n                <select\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                >\n                    {states.map((state) => {\n                        return (\n                            <option value={state.state_id}>\n                                {state.state_name}\n                            </option>\n                        );\n                    })}\n                </select>\n            </div>\n            <div>\n                <select\n                    value={district}\n                    onChange={(e) => {\n                        setDistrict(e.target.value);\n                    }}\n                >\n                    {districts.map((district) => {\n                        return (\n                            <option value={district.district_id}>\n                                {district.district_name}\n                            </option>\n                        );\n                    })}\n                </select>\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-05 19:24:02\n * @modify date 2021-05-05 19:24:02\n * @desc [description]\n */\nimport React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport CryptoJS from 'crypto-js';\n\nfunction Login({ setToken }) {\n    const [mobile, setMobile] = useState(null);\n    const [otp, setOtp] = useState(null);\n    const [sessionDetails, setSessionDetails] = useState({});\n\n    const getOtp = () => {\n        if (!mobile) return;\n\n        fetch('https://cdn-api.co-vin.in/api/v2/auth/generateMobileOTP', {\n            body: JSON.stringify({\n                mobile: mobile,\n                secret:\n                    'U2FsdGVkX1/3I5UgN1RozGJtexc1kfsaCKPadSux9LY+cVUADlIDuKn0wCN+Y8iB4ceu6gFxNQ5cCfjm1BsmRQ==',\n            }),\n            headers: {\n                'content-type': 'application/json',\n            },\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'omit',\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setSessionDetails({ txnId: res.txnId });\n            })\n            .catch((error) => console.log(error));\n    };\n    const verifyOtp = () => {\n        if (!otp) return;\n\n        let otpHasKey = CryptoJS.SHA256(otp).toString(CryptoJS.enc.Hex);\n        fetch('https://cdn-api.co-vin.in/api/v2/auth/validateMobileOtp', {\n            body: JSON.stringify({\n                otp: otpHasKey,\n                txnId: sessionDetails.txnId,\n            }),\n            headers: {\n                'content-type': 'application/json',\n            },\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'omit',\n        })\n            .then((res) => res.json())\n            .then((res) => {\n                setSessionDetails({\n                    ...sessionDetails,\n                    token: res.token,\n                });\n                if (setToken) setToken(res.token);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    return (\n        <div>\n            {!sessionDetails.txnId && (\n                <div className=\"row login\">\n                    <div className=\"input-label black\">Mobile No. </div>\n                    <div>\n                        <input\n                            type=\"tel\"\n                            value={mobile}\n                            name=\"mobile\"\n                            onChange={(e) => setMobile(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <Button label=\"Submit\" onClick={() => getOtp()} />\n                    </div>\n                </div>\n            )}\n            {sessionDetails.txnId && (\n                <div className=\"row otp\">\n                    <div className=\"input-label black\">Enter OTP </div>\n                    <div>\n                        <input\n                            type=\"number\"\n                            value={otp}\n                            name=\"mobile\"\n                            onChange={(e) => setOtp(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <Button label=\"Submit\" onClick={() => verifyOtp()} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Login;\n","/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-03 23:45:24\n * @modify date 2021-05-06 15:02:21\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport TextToSpeechStream from 'text-to-speech-stream';\nimport moment from 'moment';\n\nimport SlotsAvailableAlert from './components/Alert/SlotsAvailableAlert';\nimport AutomaticSlotBooking from './components/Booking/AutomaticSlotBooking';\nimport Button from './components/Button/Button';\n\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\n\nfunction App() {\n    const [token, setToken] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [slotsList18, setSlotsList18] = useState([]);\n    const [availableSlots18, setAvailableSlots18] = useState([]);\n    const [slotsList45, setSlotsList45] = useState([]);\n    const [availableSlots45, setavailableSlots45] = useState([]);\n    const [volumeMute18, setVolumeMute18] = useState(true);\n    const [volumeMute45, setVolumeMute45] = useState(false);\n    const [districtId, setDistrictId] = useState(294);\n    const [vaccineType, setVaccineType] = useState('ALL');\n\n    const getData = () => {\n        setLoading(true);\n        var today = moment().format('DD-MM-YYYY');\n        let baseUrl =\n            'https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict';\n\n        baseUrl += '?district_id=' + districtId + '&date=' + today;\n\n        if (vaccineType !== 'ALL') {\n            baseUrl += '&vaccine=' + vaccineType;\n        }\n\n        fetch(baseUrl)\n            .then((res) => res.json())\n            .then((res) => {\n                let list18 = [];\n                let availableList18 = [];\n                let list45 = [];\n                let availableList45 = [];\n                res.centers.forEach(({ sessions, ...centerRest }) => {\n                    sessions.forEach((session) => {\n                        let { min_age_limit, available_capacity } = session;\n                        let data = {\n                            ...centerRest,\n                            ...session,\n                        };\n                        if (min_age_limit < 45) {\n                            list18.push(data);\n\n                            if (available_capacity > 0) {\n                                availableList18.push(data);\n                            }\n                        } else {\n                            list45.push(data);\n\n                            if (available_capacity > 0) {\n                                availableList45.push(data);\n                            }\n                        }\n                    });\n                });\n\n                setSlotsList18(list18);\n                setAvailableSlots18(availableList18);\n                setSlotsList45(list45);\n                setavailableSlots45(availableList45);\n            })\n            .catch((error) => console.log(error))\n            .finally(() => setLoading(false));\n    };\n\n    useEffect(() => {\n        if (availableSlots18.length > 0 && volumeMute18) {\n            vaccineAvailableVoice('18+');\n        }\n    }, [availableSlots18]);\n\n    useEffect(() => {\n        if (availableSlots45.length > 0 && volumeMute45) {\n            vaccineAvailableVoice('45+');\n        }\n    }, [availableSlots45]);\n\n    useEffect(() => {\n        try {\n            let token = sessionStorage.getItem('token');\n            setToken(token);\n        } catch (error) {\n            console.log(error);\n        }\n        getData();\n        let fetchInterval = setInterval(() => getData(), 2000);\n        return () => {\n            clearTimeout(fetchInterval);\n        };\n    }, [districtId, vaccineType]);\n\n    const vaccineAvailableVoice = (age) => {\n        var voice = TextToSpeechStream.getVoiceByName('Alex');\n\n        var synthesizer = new TextToSpeechStream({\n            voice: voice,\n            pitch: 1,\n            rate: 1,\n        });\n\n        synthesizer.write('Covid vaccines are available for ' + age);\n    };\n\n    const setTokenHandler = (token) => {\n        setToken(token);\n        sessionStorage.setItem('token', token);\n    };\n\n    return (\n        <Router>\n            <div>\n                <header>\n                    <nav>\n                        <ul className=\"nav-area\">\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/slots_available\">\n                                    Slots available\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to=\"/automatic_booking\">Booking</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                    <div>{!token && <Login setToken={setTokenHandler} />}</div>\n                    <div className=\"volume-controll\">\n                        <Button\n                            onClick={() => setVolumeMute18(!volumeMute18)}\n                            className=\"icon-button\"\n                        >\n                            <span>18+</span>\n                            <i\n                                className={`fa fa-volume-${\n                                    volumeMute18 ? 'up' : 'off'\n                                }`}\n                            ></i>\n                        </Button>\n                        <Button\n                            onClick={() => setVolumeMute45(!volumeMute45)}\n                            className=\"icon-button\"\n                        >\n                            <span>45+</span>\n                            <i\n                                className={`fa fa-volume-${\n                                    volumeMute45 ? 'up' : 'off'\n                                }`}\n                            ></i>\n                        </Button>\n                    </div>\n                </header>\n                <div className=\"row header-baner\">\n                    <div className=\"row\">\n                        <Home token={token} setDistrictId={setDistrictId} />\n                        <div>\n                            <label className=\"input-label\">Vaccine Type</label>\n                            <select\n                                value={vaccineType}\n                                onChange={(e) => setVaccineType(e.target.value)}\n                            >\n                                <option value=\"ALL\">ALL</option>\n                                <option value=\"COVAXIN\">COVAXIN</option>\n                                <option value=\"COVISHIELD\">COVISHIELD</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"row right-align my-info\">\n                        @ Praveen Reddy Reddivari | praveen.reddivari@gmail.com\n                        <div className=\"contact-icons\">\n                            <a\n                                href=\"https://www.linkedin.com/in/praveen-reddy-b8481b77/\"\n                                target=\"_blank\"\n                                class=\"fa fa-linkedin\"\n                            ></a>\n                            <a\n                                href=\"https://www.facebook.com/praveen.reddivari\"\n                                target=\"_blank\"\n                                class=\"fa fa-facebook\"\n                            ></a>\n                            <a\n                                href=\"https://twitter.com/reddivari_9\"\n                                target=\"_blank\"\n                                class=\"fa fa-twitter\"\n                            ></a>\n                        </div>\n                    </div>\n                </div>\n                <Switch>\n                    <Route path=\"/slots_available\">\n                        <SlotsAvailableAlert\n                            loading={loading}\n                            slotsList18={slotsList18}\n                            slotsList45={slotsList45}\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                        />\n                    </Route>\n                    <Route path=\"/automatic_booking\">\n                        <AutomaticSlotBooking\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                            token={token}\n                            setToken={setTokenHandler}\n                        />\n                    </Route>\n                    <Route path=\"/\">\n                        <SlotsAvailableAlert\n                            loading={loading}\n                            slotsList18={slotsList18}\n                            slotsList45={slotsList45}\n                            availableSlots18={availableSlots18}\n                            availableSlots45={availableSlots45}\n                        />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}